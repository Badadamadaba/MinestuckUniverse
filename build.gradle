buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "${mod_version}"
group = "com.cibernet.minestuckuniverse" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MinestuckUniverse"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${mappings_version}"

    replace"@VERSION@", project.version
    replaceIn "MinestuckUniverse.java"

}

repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url = "http://maven.blamejared.com"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile name: "Minestuck-${mc_version}-${minestuck_version}.jar"
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    runtime name: "Minestuck-${mc_version}-${minestuck_version}.jar"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
